package momatools.webServices.trackorder;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "TrackOrderService", targetNamespace = "http://www.gasnaturalfenosa.com/MOMA/TrackOrder")
public class TrackOrderService
    extends Service
{

    private final static URL TRACKORDERSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(TrackOrderService.class.getName());
    /** Bundle con la informacion de la configuracion */
    private static ResourceBundle resourceConf = ResourceBundle.getBundle("ConfiguracionRegularizacion");

    static {
        URL url = null;
        String wsdlLocation = resourceConf.getString("des.ws.trackOrder");
        try {
            URL baseUrl;
            baseUrl = TrackOrderService.class.getResource(".");
            url = new URL(baseUrl, wsdlLocation);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '" + wsdlLocation + "', retrying as a local file");
            logger.warning(e.getMessage());
        }
        TRACKORDERSERVICE_WSDL_LOCATION = url;
    }

    public TrackOrderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

//    public TrackOrderService() {
//        super(TRACKORDERSERVICE_WSDL_LOCATION, new QName("http://www.gasnaturalfenosa.com/MOMA/TrackOrder", "TrackOrderService"));
//    }
    
    public TrackOrderService(String fromURL) throws MalformedURLException {
        super(new URL(fromURL), new QName("http://www.gasnaturalfenosa.com/MOMA/TrackOrder", "TrackOrderService"));
    }
    

    /**
     * 
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "servicePort")
    public ServicePortTypeTrack getServicePort() {
        return super.getPort(new QName("http://www.gasnaturalfenosa.com/MOMA/TrackOrder", "servicePort"), ServicePortTypeTrack.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "servicePort")
    public ServicePortTypeTrack getServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.gasnaturalfenosa.com/MOMA/TrackOrder", "servicePort"), ServicePortTypeTrack.class, features);
    }

}
