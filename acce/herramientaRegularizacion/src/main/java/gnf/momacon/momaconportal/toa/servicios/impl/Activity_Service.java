package gnf.momacon.momaconportal.toa.servicios.impl;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import gnf.momacon.momaconportal.ofsc.servicios.ApiPortType;




/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "activity", targetNamespace = "urn:toa:activity")
public class Activity_Service
    extends Service
{
    private final static URL ACTIVITY_WSDL_LOCATION;
    private final static Logger LOGGER = Logger.getLogger(Activity_Service.class.getName());


    static {
        URL url = null;
        String urlOfscActivity = null;
        try {
        	urlOfscActivity = "http://wmbpro.intranet.gasnatural.com:14191/momaeu_ws/ofsc_apibnd?wsdl";
            URL baseUrl = Activity_Service.class.getResource(".");
            url = new URL(baseUrl, urlOfscActivity);
        } catch (MalformedURLException e) {
            LOGGER.warning("Failed to create URL for the wsdl Location: '" + urlOfscActivity + "', retrying as a local file");
            LOGGER.warning(e.getMessage());
        }
        ACTIVITY_WSDL_LOCATION = url;
    }

    public Activity_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Activity_Service() {
        super(ACTIVITY_WSDL_LOCATION, new QName("urn:toa:activity", "activity"));
    }

    /**
     * 
     * @return
     *     returns ApiPortType
     */
//    @WebEndpoint(name = "activity")
//    public ApiPortType getActivity() {
//        return super.getPort(new QName("urn:toa:activity", "activity"), ApiPortType.class);
//    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApiPortType
     */
    @WebEndpoint(name = "activity")
    public ApiPortType getActivity(WebServiceFeature... features) {
        return super.getPort(new QName("urn:toa:activity", "activity"), ApiPortType.class, features);
    }
    
    /**
     * 
     * @return
     *     returns ApiPortType
     */
    @WebEndpoint(name = "activity")
    public ApiPortType getActivity() {
    	BindingProvider bp = (BindingProvider) super.getPort(new QName("urn:toa:activity", "activity"), ApiPortType.class);
    	bp.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://wmbpro.intranet.gasnatural.com:14191/momaeu_ws/ofsc_apibnd?gas");
        return (ApiPortType) bp;
    }

}
