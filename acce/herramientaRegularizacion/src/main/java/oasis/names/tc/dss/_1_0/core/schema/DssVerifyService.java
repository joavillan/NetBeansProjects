
package oasis.names.tc.dss._1_0.core.schema;

import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * My first service
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "DssVerifyService", targetNamespace = "urn:oasis:names:tc:dss:1.0:core:schema")
public class DssVerifyService
    extends Service
{

    private final static URL DSSVERIFYSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(oasis.names.tc.dss._1_0.core.schema.DssVerifyService.class.getName());

    static {
        URL url = DssVerifyService.class.getClassLoader().getResource("wsdl/dss_1.wsdl");
        DSSVERIFYSERVICE_WSDL_LOCATION = url;
    }

    public DssVerifyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DssVerifyService() {
        super(DSSVERIFYSERVICE_WSDL_LOCATION, new QName("urn:oasis:names:tc:dss:1.0:core:schema", "DssVerifyService"));
    }

    /**
     * 
     * @return
     *     returns DssVerifyPortType
     */
    @WebEndpoint(name = "DssPort")
    public DssVerifyPortType getDssPort() {
        return super.getPort(new QName("urn:oasis:names:tc:dss:1.0:core:schema", "DssPort"), DssVerifyPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DssVerifyPortType
     */
    @WebEndpoint(name = "DssPort")
    public DssVerifyPortType getDssPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:oasis:names:tc:dss:1.0:core:schema", "DssPort"), DssVerifyPortType.class, features);
    }

}
